// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using webapi.Data;

#nullable disable

namespace webapi.Migrations
{
    [DbContext(typeof(MyContext))]
    [Migration("20240412122339_UpdateCreate2")]
    partial class UpdateCreate2
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "8.0.3");

            modelBuilder.Entity("webapi.Models.DataDictionary", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("CategoryCode")
                        .HasColumnType("INTEGER")
                        .HasComment("类别编码--有没有必须呢");

                    b.Property<string>("CategoryName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("TEXT")
                        .HasComment("类别名称");

                    b.Property<string>("Description")
                        .HasMaxLength(100)
                        .HasColumnType("TEXT")
                        .HasComment("描述");

                    b.Property<string>("DisplayName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("TEXT")
                        .HasComment("名称");

                    b.Property<int>("Value")
                        .HasColumnType("INTEGER")
                        .HasComment("值");

                    b.HasKey("Id");

                    b.ToTable("DataDictionary");
                });

            modelBuilder.Entity("webapi.Models.DrugSendBatchOrder", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("BatchNo")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("CreateTime")
                        .HasColumnType("TEXT");

                    b.Property<int>("DrugId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("EventId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("EventType")
                        .HasColumnType("INTEGER")
                        .HasComment("出库或调拨");

                    b.Property<int>("Quantity")
                        .HasColumnType("INTEGER");

                    b.Property<string>("ReceiptNo")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("DrugSendBatchOrder", t =>
                        {
                            t.HasComment("执行批次顺序表");
                        });
                });

            modelBuilder.Entity("webapi.Models.DrugStockIn", b =>
                {
                    b.Property<int>("StockInId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER")
                        .HasComment("入库编号");

                    b.Property<string>("Approver")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("TEXT")
                        .HasComment("审核人");

                    b.Property<int>("ApproverId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("BatchNo")
                        .IsRequired()
                        .HasColumnType("TEXT")
                        .HasComment("批次号");

                    b.Property<string>("Checker")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("TEXT")
                        .HasComment("验收人");

                    b.Property<int>("CheckerId")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("CreateTime")
                        .HasColumnType("TEXT");

                    b.Property<string>("Creator")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("TEXT")
                        .HasComment("创建人");

                    b.Property<int>("CreatorId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("ReceiptNo")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("TEXT")
                        .HasComment("单据号");

                    b.Property<string>("Remarks")
                        .IsRequired()
                        .HasColumnType("TEXT")
                        .HasComment("备注");

                    b.Property<string>("StockInType")
                        .IsRequired()
                        .HasColumnType("TEXT")
                        .HasComment("入库类别");

                    b.Property<string>("WarehoueName")
                        .IsRequired()
                        .HasColumnType("TEXT")
                        .HasComment("库房名称");

                    b.Property<string>("WarehoueNo")
                        .IsRequired()
                        .HasColumnType("TEXT")
                        .HasComment("库房编号");

                    b.HasKey("StockInId");

                    b.ToTable("DrugStockIn", t =>
                        {
                            t.HasComment("药品入库");
                        });
                });

            modelBuilder.Entity("webapi.Models.DrugStockInDetail", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("CreateTime")
                        .HasColumnType("TEXT");

                    b.Property<int>("DrugId")
                        .HasColumnType("INTEGER")
                        .HasComment("药品编号");

                    b.Property<int>("InQuantity")
                        .HasColumnType("INTEGER")
                        .HasComment("入库数量");

                    b.Property<decimal>("PurchasePrice")
                        .HasColumnType("TEXT")
                        .HasComment("采购单价");

                    b.Property<string>("ReceiptNo")
                        .IsRequired()
                        .HasColumnType("TEXT")
                        .HasComment("单据号");

                    b.Property<int>("StockInId")
                        .HasColumnType("INTEGER")
                        .HasComment("单据号");

                    b.HasKey("Id");

                    b.ToTable("DrugStockInDetail", t =>
                        {
                            t.HasComment("药品入库明细");
                        });
                });

            modelBuilder.Entity("webapi.Models.DrugStockOut", b =>
                {
                    b.Property<int>("StockOutId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER")
                        .HasComment("入库编号");

                    b.Property<string>("Approver")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("TEXT")
                        .HasComment("审核人");

                    b.Property<int>("ApproverId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Checker")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("TEXT")
                        .HasComment("验收人");

                    b.Property<int>("CheckerId")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("CreateTime")
                        .HasColumnType("TEXT");

                    b.Property<string>("Creator")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("TEXT")
                        .HasComment("创建人");

                    b.Property<int>("CreatorId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("ReceiptNo")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("TEXT")
                        .HasComment("单据号");

                    b.Property<string>("Remarks")
                        .IsRequired()
                        .HasColumnType("TEXT")
                        .HasComment("备注");

                    b.Property<string>("StockOutType")
                        .IsRequired()
                        .HasColumnType("TEXT")
                        .HasComment("出库类别");

                    b.Property<string>("WarehoueName")
                        .IsRequired()
                        .HasColumnType("TEXT")
                        .HasComment("库房名称");

                    b.Property<string>("WarehoueNo")
                        .IsRequired()
                        .HasColumnType("TEXT")
                        .HasComment("库房编号");

                    b.HasKey("StockOutId");

                    b.ToTable("DrugStockOut", t =>
                        {
                            t.HasComment("药品出库");
                        });
                });

            modelBuilder.Entity("webapi.Models.DrugStockOutDetail", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("CreateTime")
                        .HasColumnType("TEXT");

                    b.Property<int>("DrugId")
                        .HasColumnType("INTEGER")
                        .HasComment("药品编号");

                    b.Property<int>("InQuantity")
                        .HasColumnType("INTEGER")
                        .HasComment("入库数量");

                    b.Property<string>("ReceiptNo")
                        .IsRequired()
                        .HasColumnType("TEXT")
                        .HasComment("单据号");

                    b.Property<decimal>("StockOutAmount")
                        .HasColumnType("TEXT")
                        .HasComment("出库金额");

                    b.Property<int>("StockOutId")
                        .HasColumnType("INTEGER")
                        .HasComment("单据号");

                    b.HasKey("Id");

                    b.ToTable("DrugStockOutDetail", t =>
                        {
                            t.HasComment("药品出库明细");
                        });
                });

            modelBuilder.Entity("webapi.Models.DrugTransfer", b =>
                {
                    b.Property<int>("TransferId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Approver")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("TEXT")
                        .HasComment("审核人");

                    b.Property<int>("ApproverId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Checker")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("TEXT")
                        .HasComment("验收人");

                    b.Property<int>("CheckerId")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("CreateTime")
                        .HasColumnType("TEXT");

                    b.Property<string>("Creator")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("TEXT")
                        .HasComment("创建人");

                    b.Property<int>("CreatorId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("InWarehourseName")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("InWarehourseNo")
                        .HasColumnType("INTEGER");

                    b.Property<string>("OutWarehouseName")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("OutWarehouseNo")
                        .HasColumnType("INTEGER");

                    b.Property<string>("ReceiptNo")
                        .IsRequired()
                        .HasColumnType("TEXT")
                        .HasComment("单据号");

                    b.HasKey("TransferId");

                    b.ToTable("DrugTransfer", t =>
                        {
                            t.HasComment("药品调拨");
                        });
                });

            modelBuilder.Entity("webapi.Models.DrugTransferDetail", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("CreateTime")
                        .HasColumnType("TEXT");

                    b.Property<int>("DrugId")
                        .HasColumnType("INTEGER")
                        .HasComment("药品编号");

                    b.Property<string>("ReceiptNo")
                        .IsRequired()
                        .HasColumnType("TEXT")
                        .HasComment("单据号");

                    b.Property<int>("TransferId")
                        .HasColumnType("INTEGER")
                        .HasComment("单据号");

                    b.Property<int>("TransferQuantity")
                        .HasColumnType("INTEGER")
                        .HasComment("入库数量");

                    b.HasKey("Id");

                    b.ToTable("DrugTransferDetail", t =>
                        {
                            t.HasComment("药品调拨明细");
                        });
                });

            modelBuilder.Entity("webapi.Models.HierarchyDictionary", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("CategoryName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("TEXT")
                        .HasComment("类别名称");

                    b.Property<string>("Description")
                        .HasMaxLength(100)
                        .HasColumnType("TEXT")
                        .HasComment("备注");

                    b.Property<string>("DisplayName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("TEXT")
                        .HasComment("名称");

                    b.Property<int>("ParentId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("Value")
                        .HasColumnType("INTEGER")
                        .HasComment("值");

                    b.HasKey("Id");

                    b.ToTable("HierachyDictionary");
                });

            modelBuilder.Entity("webapi.Models.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("Age")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Sex")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("UserName")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("User");
                });
#pragma warning restore 612, 618
        }
    }
}
